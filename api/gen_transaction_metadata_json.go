// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package api

import (
	"encoding/json"
	"errors"
	"math/big"

	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/common"
)

// MarshalJSON marshals as JSON.
func (t TransactionMetadata) MarshalJSON() ([]byte, error) {
	type TransactionMetadata struct {
		ABIMethod           *abi.Method     `json:"abiMethod,omitempty"`
		To                  *common.Address `json:"to,omitempty" rlp:"nil"`
		Nonce               uint64          `json:"nonce"    gencodec:"required"`
		GasPrice            *big.Int        `json:"gasPrice" gencodec:"required"`
		GasLimit            uint64          `json:"gasLimit"      gencodec:"required"`
		GatewayFeeRecipient *common.Address `json:"gatewayFeeRecipient" rlp:"nil"`
		GatewayFee          *big.Int        `json:"gatewayFee" rlp:"nil"`
	}
	var enc TransactionMetadata
	enc.ABIMethod = t.ABIMethod
	enc.To = t.To
	enc.Nonce = t.Nonce
	enc.GasPrice = t.GasPrice
	enc.GasLimit = t.GasLimit
	enc.GatewayFeeRecipient = t.GatewayFeeRecipient
	enc.GatewayFee = t.GatewayFee
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (t *TransactionMetadata) UnmarshalJSON(input []byte) error {
	type TransactionMetadata struct {
		ABIMethod           *abi.Method     `json:"abiMethod,omitempty"`
		To                  *common.Address `json:"to,omitempty" rlp:"nil"`
		Nonce               *uint64         `json:"nonce"    gencodec:"required"`
		GasPrice            *big.Int        `json:"gasPrice" gencodec:"required"`
		GasLimit            *uint64         `json:"gasLimit"      gencodec:"required"`
		GatewayFeeRecipient *common.Address `json:"gatewayFeeRecipient" rlp:"nil"`
		GatewayFee          *big.Int        `json:"gatewayFee" rlp:"nil"`
	}
	var dec TransactionMetadata
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.ABIMethod != nil {
		t.ABIMethod = dec.ABIMethod
	}
	if dec.To != nil {
		t.To = dec.To
	}
	if dec.Nonce == nil {
		return errors.New("missing required field 'nonce' for TransactionMetadata")
	}
	t.Nonce = *dec.Nonce
	if dec.GasPrice == nil {
		return errors.New("missing required field 'gasPrice' for TransactionMetadata")
	}
	t.GasPrice = dec.GasPrice
	if dec.GasLimit == nil {
		return errors.New("missing required field 'gasLimit' for TransactionMetadata")
	}
	t.GasLimit = *dec.GasLimit
	if dec.GatewayFeeRecipient != nil {
		t.GatewayFeeRecipient = dec.GatewayFeeRecipient
	}
	if dec.GatewayFee != nil {
		t.GatewayFee = dec.GatewayFee
	}
	return nil
}
