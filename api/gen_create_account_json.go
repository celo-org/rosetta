// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package api

import (
	"encoding/json"
	"errors"

	"github.com/ethereum/go-ethereum/common"
)

// MarshalJSON marshals as JSON.
func (c CreateAccountMetadata) MarshalJSON() ([]byte, error) {
	type CreateAccountMetadata struct {
		ContractAddress *common.Address      `json:"address" gencodec:"required"`
		Tx              *TransactionMetadata `json:"tx"`
	}
	var enc CreateAccountMetadata
	enc.ContractAddress = c.ContractAddress
	enc.Tx = c.Tx
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (c *CreateAccountMetadata) UnmarshalJSON(input []byte) error {
	type CreateAccountMetadata struct {
		ContractAddress *common.Address      `json:"address" gencodec:"required"`
		Tx              *TransactionMetadata `json:"tx"`
	}
	var dec CreateAccountMetadata
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.ContractAddress == nil {
		return errors.New("missing required field 'address' for CreateAccountMetadata")
	}
	c.ContractAddress = dec.ContractAddress
	if dec.Tx != nil {
		c.Tx = dec.Tx
	}
	return nil
}
