# Copyright 2020 Celo Org
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version: 2.1

executors:
  golang:
    docker:
      - image: circleci/golang:1.13
        user: root
    working_directory: /go/src/github.com/celo-org/rosetta
attach: &attach
  attach_workspace:
    at: /go
jobs:
  build-go:
    executor: golang
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-modules-v1-{{ checksum "go.sum" }}
            - go-modules-v1
      - run: make deps
      - run: make all
      - save_cache:
          key: go-modules-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - persist_to_workspace:
          root: /go
          paths:
            - src
            - bin
            - pkg/mod
  unit-tests:
    executor: golang
    steps:
      - *attach
      - run: |
          mkdir -p /tmp/test-results
          trap "go-junit-report < /tmp/test-results/go-test.out > /tmp/test-results/go-test-report.xml" EXIT
          go test -v ./... | tee /tmp/test-results/go-test.out
      - store_artifacts:
          path: /tmp/test-results
          destination: raw-test-output
      - store_test_results:
          path: /tmp/test-results

  lint:
    executor: golang
    steps:
      - *attach
      - run: make install-lint-ci
      - run: |
          mkdir -p /tmp/test-results
          golangci-lint run --config .golangci.yml --out-format junit-xml ./... | tee /tmp/test-results/go-lint-report.xml
      - store_artifacts:
          path: /tmp/test-results
          destination: raw-test-output
      - store_test_results:
          path: /tmp/test-results
  coverage:
    executor: golang
    steps:
      - attach_workspace:
          at: /go
      - run: make test-cover
      - run: bash <(curl -s https://codecov.io/bash)
  check-license:
    executor: golang
    steps:
      - *attach
      - run: make check-license

workflows:
  version: 2
  build:
    jobs:
      - build-go
      - unit-tests:
          requires:
            - build-go
      - lint:
          requires:
            - build-go
      - coverage:
          requires:
            - build-go
      - check-license:
          requires:
            - build-go
